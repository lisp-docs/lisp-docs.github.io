"use strict";(self.webpackChunklisp_docs_github_io=self.webpackChunklisp_docs_github_io||[]).push([[4101],{8e3:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=i(5893),r=i(1151);const n={},a="Package Inferred Systems",o={id:"tutorial/projects/package_inferred",title:"Package Inferred Systems",description:"This article is incomplete, we need to finish writing it. Please help by contributing to the project.",source:"@site/docs/tutorial/projects/package_inferred.md",sourceDirName:"tutorial/projects",slug:"/tutorial/projects/package_inferred",permalink:"/docs/tutorial/projects/package_inferred",draft:!1,unlisted:!1,editUrl:"https://github.com/lisp-docs/lisp-docs.github.io/tree/main/docs/tutorial/projects/package_inferred.md",tags:[],version:"current",lastUpdatedBy:"daninus14",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Packages and Systems",permalink:"/docs/tutorial/projects/packages-systems"},next:{title:"Structuring Large Projects",permalink:"/docs/tutorial/projects/structuring_large_projects"}},c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"How to Define a Package Inferred System?",id:"how-to-define-a-package-inferred-system",level:2},{value:"Examples of Package Inferred Systems",id:"examples-of-package-inferred-systems",level:2}];function l(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"package-inferred-systems",children:"Package Inferred Systems"}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsx)(t.p,{children:"This article is incomplete, we need to finish writing it. Please help by contributing to the project."})}),"\n",(0,s.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(t.p,{children:["Using ",(0,s.jsx)(t.a,{href:"https://asdf.common-lisp.dev/",children:"ASDF"})," there is an option for ",(0,s.jsx)(t.code,{children:"package-inferred-system"}),". This is a way to make it easier to define a system AKA it's ",(0,s.jsx)(t.code,{children:".asd"})," file by having ASDF figure out what files to load based on how the system is programmed."]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Starting with release 3.1.2, ASDF supports a one-package-per-file style of programming, in which each file is its own system, and dependencies are deduced from the defpackage form or its variant, uiop",":define-package","."]}),"\n",(0,s.jsxs)(t.p,{children:["In this style of system definition, package names map to systems with the same name (in lower case letters), and if a system is defined with ",":class"," package-inferred-system, then system names that start with that name (using the slash / separator) refer to files under the filesystem hierarchy where the system is defined. For instance, if system my-lib is defined in /foo/bar/my-lib/my-lib.asd, then system my-lib/src/utility will be found in file /foo/bar/my-lib/src/utility.lisp."]}),"\n",(0,s.jsx)(t.p,{children:"One package per file style was made popular by faslpath and quick-build, and at the cost of stricter package discipline, may yield more maintainable code. This style is used in ASDF itself (starting with ASDF 3), by lisp-interface-library, and a few other libraries."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://asdf.common-lisp.dev/asdf/The-package_002dinferred_002dsystem-extension.html",children:"Source"})}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["See the ",(0,s.jsx)(t.a,{href:"https://asdf.common-lisp.dev/asdf/The-package_002dinferred_002dsystem-extension.html",children:"ASDF Docs on Package Inferred Systems"})," for a short reference on it. Here we will explain it with examples in a more lengthly way."]}),"\n",(0,s.jsx)(t.h2,{id:"how-to-define-a-package-inferred-system",children:"How to Define a Package Inferred System?"}),"\n",(0,s.jsxs)(t.p,{children:["The option ",(0,s.jsx)(t.code,{children:"package-inferred-system"})," has to be declared in the ",(0,s.jsx)(t.code,{children:".asd"})," file."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/fare/asdf/blob/master/doc/best_practices.md",children:"https://github.com/fare/asdf/blob/master/doc/best_practices.md"})}),"\n",(0,s.jsx)(t.h2,{id:"examples-of-package-inferred-systems",children:"Examples of Package Inferred Systems"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/fare/lisp-interface-library?tab=readme-ov-file",children:"https://github.com/fare/lisp-interface-library?tab=readme-ov-file"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/ruricolist/overlord",children:"https://github.com/ruricolist/overlord"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/ruricolist/vernacular",children:"https://github.com/ruricolist/vernacular"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>o,a:()=>a});var s=i(7294);const r={},n=s.createContext(r);function a(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);